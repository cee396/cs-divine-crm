"use strict";(()=>{var e={};e.id=996,e.ids=[996],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},5246:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>w,patchFetch:()=>v,requestAsyncStorage:()=>l,routeModule:()=>d,serverHooks:()=>h,staticGenerationAsyncStorage:()=>m});var a={};r.r(a),r.d(a,{GET:()=>p,dynamic:()=>c});var i=r(9303),s=r(8716),o=r(670),n=r(7070),u=r(2663);let c="force-dynamic";async function p(){try{let e=await u._.lead.count(),t=await u._.lead.count({where:{status:"New Lead"}}),r=await u._.lead.count({where:{status:"Contacted"}}),a=await u._.lead.count({where:{status:"Qualified"}}),i=await u._.lead.count({where:{status:"Closed"}});return n.NextResponse.json({totalLeads:e,newLeads:t,contactedLeads:r,qualifiedLeads:a,closedDeals:i,avgResponseTime:2.5})}catch(e){return console.error("Error fetching metrics:",e),n.NextResponse.json({error:"Failed to fetch metrics"},{status:500})}}let d=new i.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/metrics/route",pathname:"/api/metrics",filename:"route",bundlePath:"app/api/metrics/route"},resolvedPagePath:"/home/ubuntu/cs-divine-crm/app/app/api/metrics/route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:l,staticGenerationAsyncStorage:m,serverHooks:h}=d,w="/api/metrics/route";function v(){return(0,o.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:m})}},2663:(e,t,r)=>{r.d(t,{_:()=>i});let a=require("@prisma/client"),i=globalThis.prisma??new a.PrismaClient}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[276,972],()=>r(5246));module.exports=a})();