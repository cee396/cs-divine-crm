"use strict";(()=>{var e={};e.id=71,e.ids=[71],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},317:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>x,patchFetch:()=>h,requestAsyncStorage:()=>m,routeModule:()=>p,serverHooks:()=>w,staticGenerationAsyncStorage:()=>g});var a={};r.r(a),r.d(a,{GET:()=>u,POST:()=>d,dynamic:()=>c});var l=r(9182),o=r(2007),n=r(6719),s=r(3442),i=r(5970);let c="force-dynamic";async function u(e){try{let{searchParams:t}=new URL(e.url),r=t.get("limit"),a=t.get("leadId"),l={};a&&(l.leadId=a);let o=await i._.callLog.findMany({where:l,orderBy:{callDate:"desc"},take:r?parseInt(r):void 0,include:{lead:{select:{id:!0,ownerName:!0,propertyAddress:!0,county:!0}},user:{select:{id:!0,name:!0,email:!0}}}});return s.NextResponse.json({callLogs:o})}catch(e){return console.error("Error fetching call logs:",e),s.NextResponse.json({error:"Failed to fetch call logs"},{status:500})}}async function d(e){try{let{leadId:t,userId:r,outcome:a,duration:l,notes:o,followUpDate:n}=await e.json();if(!t||!r||!a)return s.NextResponse.json({error:"Missing required fields: leadId, userId, outcome"},{status:400});let c=await i._.callLog.create({data:{leadId:t,userId:r,outcome:a,duration:l?parseInt(l):null,notes:o||null,followUpDate:n?new Date(n):null},include:{lead:{select:{id:!0,ownerName:!0,propertyAddress:!0,county:!0}},user:{select:{id:!0,name:!0,email:!0}}}});return await i._.lead.update({where:{id:t},data:{lastContactDate:new Date,contactAttempts:{increment:1},nextFollowUpDate:n?new Date(n):null}}),s.NextResponse.json({success:!0,callLog:c})}catch(e){return console.error("Error creating call log:",e),s.NextResponse.json({error:"Failed to create call log"},{status:500})}}let p=new l.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/call-logs/route",pathname:"/api/call-logs",filename:"route",bundlePath:"app/api/call-logs/route"},resolvedPagePath:"/home/ubuntu/tax-deed-crm-enterprise/app/app/api/call-logs/route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:m,staticGenerationAsyncStorage:g,serverHooks:w}=p,x="/api/call-logs/route";function h(){return(0,n.patchFetch)({serverHooks:w,staticGenerationAsyncStorage:g})}},5970:(e,t,r)=>{r.d(t,{_:()=>l});let a=require("@prisma/client"),l=globalThis.prisma??new a.PrismaClient}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[372,609],()=>r(317));module.exports=a})();